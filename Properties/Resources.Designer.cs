//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GMare.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GMare.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap accept {
            get {
                object obj = ResourceManager.GetObject("accept", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap add {
            get {
                object obj = ResourceManager.GetObject("add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_move {
            get {
                object obj = ResourceManager.GetObject("arrow_move", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_redo {
            get {
                object obj = ResourceManager.GetObject("arrow_redo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_switch {
            get {
                object obj = ResourceManager.GetObject("arrow_switch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_undo {
            get {
                object obj = ResourceManager.GetObject("arrow_undo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap background {
            get {
                object obj = ResourceManager.GetObject("background", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap bin {
            get {
                object obj = ResourceManager.GetObject("bin", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap binary {
            get {
                object obj = ResourceManager.GetObject("binary", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color blend data is only available for binary export, and requires Pro versions of Game Maker. Game Maker does not natively support color blend data for tile objects in it&apos;s project files..
        /// </summary>
        internal static string BlendWarning {
            get {
                return ResourceManager.GetString("BlendWarning", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap book_open {
            get {
                object obj = ResourceManager.GetObject("book_open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap brush_add {
            get {
                object obj = ResourceManager.GetObject("brush_add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap brush_delete {
            get {
                object obj = ResourceManager.GetObject("brush_delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap brush_edit {
            get {
                object obj = ResourceManager.GetObject("brush_edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap brush_fill {
            get {
                object obj = ResourceManager.GetObject("brush_fill", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap button_decline {
            get {
                object obj = ResourceManager.GetObject("button_decline", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap check_list {
            get {
                object obj = ResourceManager.GetObject("check_list", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap clipboard_copy {
            get {
                object obj = ResourceManager.GetObject("clipboard_copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap clipboard_cut {
            get {
                object obj = ResourceManager.GetObject("clipboard_cut", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap clipboard_paste {
            get {
                object obj = ResourceManager.GetObject("clipboard_paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap color_swatch {
            get {
                object obj = ResourceManager.GetObject("color_swatch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap decline {
            get {
                object obj = ResourceManager.GetObject("decline", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap delete {
            get {
                object obj = ResourceManager.GetObject("delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap eraser {
            get {
                object obj = ResourceManager.GetObject("eraser", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap exit {
            get {
                object obj = ResourceManager.GetObject("exit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap export {
            get {
                object obj = ResourceManager.GetObject("export", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap export_binary {
            get {
                object obj = ResourceManager.GetObject("export_binary", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap export_gmproject {
            get {
                object obj = ResourceManager.GetObject("export_gmproject", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap export_image {
            get {
                object obj = ResourceManager.GetObject("export_image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap eye {
            get {
                object obj = ResourceManager.GetObject("eye", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap file_close {
            get {
                object obj = ResourceManager.GetObject("file_close", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap file_new {
            get {
                object obj = ResourceManager.GetObject("file_new", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap file_open {
            get {
                object obj = ResourceManager.GetObject("file_open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap file_options {
            get {
                object obj = ResourceManager.GetObject("file_options", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap flip_horizontal {
            get {
                object obj = ResourceManager.GetObject("flip_horizontal", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap flip_vertical {
            get {
                object obj = ResourceManager.GetObject("flip_vertical", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap folder_image {
            get {
                object obj = ResourceManager.GetObject("folder_image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap gmare {
            get {
                object obj = ResourceManager.GetObject("gmare", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap grid {
            get {
                object obj = ResourceManager.GetObject("grid", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap grid_isometric {
            get {
                object obj = ResourceManager.GetObject("grid_isometric", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap grid_snap {
            get {
                object obj = ResourceManager.GetObject("grid_snap", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap help {
            get {
                object obj = ResourceManager.GetObject("help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap image {
            get {
                object obj = ResourceManager.GetObject("image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap import {
            get {
                object obj = ResourceManager.GetObject("import", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap import_objects {
            get {
                object obj = ResourceManager.GetObject("import_objects", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap information {
            get {
                object obj = ResourceManager.GetObject("information", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap instance {
            get {
                object obj = ResourceManager.GetObject("instance", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap instance_show {
            get {
                object obj = ResourceManager.GetObject("instance_show", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap layer {
            get {
                object obj = ResourceManager.GetObject("layer", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap layer_add {
            get {
                object obj = ResourceManager.GetObject("layer_add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap layer_delete {
            get {
                object obj = ResourceManager.GetObject("layer_delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap layer_edit {
            get {
                object obj = ResourceManager.GetObject("layer_edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap layer_empty {
            get {
                object obj = ResourceManager.GetObject("layer_empty", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap layers {
            get {
                object obj = ResourceManager.GetObject("layers", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap level01 {
            get {
                object obj = ResourceManager.GetObject("level01", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap level02 {
            get {
                object obj = ResourceManager.GetObject("level02", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap level03 {
            get {
                object obj = ResourceManager.GetObject("level03", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap level04 {
            get {
                object obj = ResourceManager.GetObject("level04", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap level05 {
            get {
                object obj = ResourceManager.GetObject("level05", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap list_box {
            get {
                object obj = ResourceManager.GetObject("list_box", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap magifier_zoom_out {
            get {
                object obj = ResourceManager.GetObject("magifier_zoom_out", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap magnifier {
            get {
                object obj = ResourceManager.GetObject("magnifier", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap magnifier_zoom_in {
            get {
                object obj = ResourceManager.GetObject("magnifier_zoom_in", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap mouse_wheel {
            get {
                object obj = ResourceManager.GetObject("mouse_wheel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap page_find {
            get {
                object obj = ResourceManager.GetObject("page_find", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap point {
            get {
                object obj = ResourceManager.GetObject("point", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap refactor {
            get {
                object obj = ResourceManager.GetObject("refactor", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap rename {
            get {
                object obj = ResourceManager.GetObject("rename", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap room {
            get {
                object obj = ResourceManager.GetObject("room", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap room_edit {
            get {
                object obj = ResourceManager.GetObject("room_edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap save {
            get {
                object obj = ResourceManager.GetObject("save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaling data is only available for binary export. Game Maker does not natively support scaling data for tile objects in it&apos;s project files..
        /// </summary>
        internal static string ScaleWarning {
            get {
                return ResourceManager.GetString("ScaleWarning", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap script {
            get {
                object obj = ResourceManager.GetObject("script", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap select_all {
            get {
                object obj = ResourceManager.GetObject("select_all", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap selection_empty {
            get {
                object obj = ResourceManager.GetObject("selection_empty", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap shape_rectangle {
            get {
                object obj = ResourceManager.GetObject("shape_rectangle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap shape_triangle {
            get {
                object obj = ResourceManager.GetObject("shape_triangle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap slash {
            get {
                object obj = ResourceManager.GetObject("slash", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sort_accending {
            get {
                object obj = ResourceManager.GetObject("sort_accending", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sort_alphabet_descending {
            get {
                object obj = ResourceManager.GetObject("sort_alphabet_descending", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sort_alphabetical_ascending {
            get {
                object obj = ResourceManager.GetObject("sort_alphabetical_ascending", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sort_descending {
            get {
                object obj = ResourceManager.GetObject("sort_descending", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sort_down {
            get {
                object obj = ResourceManager.GetObject("sort_down", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sort_type {
            get {
                object obj = ResourceManager.GetObject("sort_type", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sort_up {
            get {
                object obj = ResourceManager.GetObject("sort_up", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap text {
            get {
                object obj = ResourceManager.GetObject("text", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tileset_save {
            get {
                object obj = ResourceManager.GetObject("tileset_save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_brush {
            get {
                object obj = ResourceManager.GetObject("tool_brush", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_fill {
            get {
                object obj = ResourceManager.GetObject("tool_fill", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_properties {
            get {
                object obj = ResourceManager.GetObject("tool_properties", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_selection {
            get {
                object obj = ResourceManager.GetObject("tool_selection", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
